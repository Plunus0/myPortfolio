[Spring]
<Spring 이란?>
POJO (Plain Old JAVA Object) 개발방식으로 기존의, EJB 방식보다 상대적으로 가볍고 쉽다.

<Spring의 특징>
1. SoftWare 재사용 방안들
- 복사(copy) & 붙이기(paste)
- 메서드 호출(Method)
- 클래스 재사용(상속)
- AOP(Aspect Oriented Programming) : OOP 기능을 확장시켜 객체지향다운 프로그래밍이 가능하도록 함(관심사의 분리)

2. 디자인 패턴(Design Pattern)
프로그램에서 자주 사용하는 기능이나 모듈등을 재사용하기 편하게 묶을 수 있는 방법을 제시한 개념
* GOF(Gaong of Four)의 디자인 패턴

3. 프레임워크
SoftWare의 재상용 방안들과 디자인 패턴이 합쳐진 정형화된 가이드
요구사항을 만족하는 구조와 안정적인 기능을 실행하도록 제어해주는 라이브러리 집합

- 프레임워크를 사용하는 이유
> 비기능적인 요소들이 초기 개발단계에서 구현되어야하는 불편함이 감소됨
> 기능적인 개발에만 집중할 수 있음
> 디자인 패턴을 내부적으로 적용하여 반복적인 객체 생성이나 문제들을 해결할 수 있음
개발자는 프레임워크의 기반 코드를 확장하여 사용하면서, 프레임워크 안에 적용된 디자인 패턴을 익힐 수 있다.
* 개발자는 프레임워크의 기반 코드를 확장하여 사용하면서, 프레임워크 안에 적용된 디자인 패턴을 익힐 수 있다.

4. Spring 프레임워크
POJO 개발방식을 지원하는 프레임워크

- Spring 프레임워크의 구조

> Spring Core
Spring Core는 Spring Container을 의미합니다. core라는 말 그대로 Container는 Spring Framework의 핵심이며 그중 핵심은 Bean Factory Container입니다.  그 이유는 바로 Bean Factory는 IoC패턴을 적용하여 객체 구성 부터 의존성 처리까지 모든 일을 처리하는 역할을 하고 있기 때문입니다.
* IoC(Inversion of Control) = Bean container
IoC란 '제어의 역전' 즉, 인스턴스의 생성부터 소멸까지를 개발자가 아닌 컨테이너가 대신 해준다는 의미이다. 컨테이너가 개발자가 하던 인스턴스의 제어권한을 위암받아 진행을 함 (개발자의 권한은 축소됐지만 개발자의 실수를 최소화할 수 있다.)
싱글톤객체(어노테이션)이며, 미리 객체의 데이터를 생성하고 생성한 데이터를 계속 공유해서 모든 소스에서 사용된다.
* DI(Dependency Injection)
클래스간의 의존관계인 빈 설정 정보를 컨테이너가 자동으로 연결해 주는 것, IoC 컨테이너에서 만들어준 인스턴스(객체)를 가져다 쓰는 것을 의미한다.
* Annotation
IoC컨테이너 내부와 연결해주는 주석 (@Autowired)
* 해당 객체는 Servlet-Context에서 등록할 수 있다. (등록에 사용되는 Tag는 버전에 따라 다르다.)

> Spring Context
Spring context는 Spring Framework의 context 정보들을 제공하는 설정 파일입니다. Spring Context에는 JNDI, EJB, Validation, Scheduiling, Internaliztaion 등 엔터프라이즈 서비스들을 포함하고 있습니다.
* Spring Context에 있는 JNDI에서 @Autowired로 명령받은대로 빈즈에 해당 명령어가 있는지 확인한다.

> Spring AOP
Spring AOP module은 Spring Framework에서 관점지향 프로그래밍을 할 수 있고 AOP를 적용 할수 있게 도와주는 Module입니다. 해당 AOP에 대한 내용은 위에서 설명 했기 때문에 넘어 가도록 하겠습니다.

> Spring DAO
DAO란 Data Access Object의 약자로 Database Data에 접근하는 객체입니다. Spring JDBC DAO는 추상 레이어를 지원함으로써 코딩이나 예외처리 하는 부분을 간편화 시켜 일관된 방법으로 코드를 짤 수 있게 도와줍니다.

> Spring ORM
ORM이란 Object relational mapping의 약자로 간단하게 객체와의 관계 설정을 하는 것입니다. Spring에서는 Ibatis, Hibernate, JDO 등 인기있는 객체 관계형 도구(OR도구)를 사용 할 수 있도록 지원합니다.

> Spring Web
Spirng에서 Web context module은 Application module에 내장되어 있고 Web기반의 응용프로그램에 대한 Context를 제공하여 일반적인 Web Application 개발에 필요한 기본적인 기능을 지원합니다. 그로인해 Jakarta Structs 와의 통합을 지원하고 있습니다.

> Spring MVC
Spring에서는 MVC에서는 Model2 구조로 Apllication을 만들 수 있도록 지원합니다. MVC (Model-View-Controller) 프레임 워크는 웹 응용 프로그램을 작성하기위한 완전한 기능을 갖춘 MVC를 구현합니다. MVC 프레임 워크는 전략 인터페이스를 통해 고급 구성 가능하며 JSP, Velocity, Tiles, iText 및 POI를 포함한 수많은 뷰 기술을 지원하고 있습니다.