각각 DAO들의 같은 기능들을 모아 interface의 메서드로 생성한다.(bottom-up방식)

Service에서 DAO를 사용할 때 interface화 된 타입(Object 등의 상위객체타입)으로 반환을 요청하기 때문에 수동형변환을 해주어야한다.(mapper에서는 반환타입을 Object로 사용할 수 없다.)
* 제네릭스를 사용할 경우 내부 데이터를 하나하나 수동형변환 해주어야한다.
@Override
public List<CgvBoardVO> getListResult(int startCount, int endCount) {
List<Object> olist = boardDao.select(startCount, endCount);
List<CgvBoardVO> list = new ArrayList();
for(Object obj : olist) {
CgvBoardVO vo = (CgvBoardVO)obj;
list.add(vo);
}
return list;
}

- 파라미터에 오브젝트가 있을 경우
> 메서드내에서 형변환 후 활용
(해당 오브젝트는 자식을 통해 생성된 부모자식의 오브젝트이다.)

- 리턴 타입에 오브젝트가 있을 경우
> 해당 메서드를 호출한 곳에서 형변환