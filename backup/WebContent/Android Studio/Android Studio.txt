[안드로이드]
JAVA를 기반으로 하는 스마트폰 플랫폼의 종류
* 그 외의 플랫폼으로는 IOS, MOS 등이 있다.
JAVA ME(Micro Edition)을 사용하며 단독사용은 불가하다.

<개발과정>
A. 소스코드 작성
B. 설치파일 생성
> 1. 빌드(컴파일+비밀번호) : (라이브러리와 이미지 등의 모든 파일을 같이 담는다.)
* 리눅스의 빌드
소스코드를 컴퓨터가 읽을 수 있는 기계어로 번역(컴파일)하고 내가 만든 소스코드에서 사용하는 라이브러리와 연결해서 최종 실행 파일 형태로 만드는 것
> 2. 파일 검증
C. 업로드
D. 앱등록
E. 앱선택/설치
F. 실행

<다운로드 페이지>
http://developer.android.com/studio

<설치방법>
Standard설치 > 각 Licenses의 Accept 선택 후 설치

<실행방법>
File > New > New Project > Empty Activity > 세부 설정 확인 후 Finish 클릭
* Project 하나당 하나의 폴더가 생성된다.

<화면 상세>
- activity_main
스마트폰 화면에 보여지는 UI
* res폴더의 layout에 위치

- MainActivity.kt
내부 실행 코드(Main Method의 역할)

<세팅방법>
1. File > Setting > System Settings > Android SDK > SDK Tools
* 확인할 부분
Android SDK Build-Tools
Android Emulator
Android SDK Platform-Tools
Intel x86 Emulator Accelerator

2. SDL Update Sites
업데이트 필요시 참고하여 업데이트 실행

<Android 뷰>
안드로이드 개발을 편하기 위해 재배치한 가상의 디렉터리 구조를 보여준다.
* 소스코드 중심

- Android 뷰의 구조
1. manifests : 설치관련 정보 디렉터리
2. java : 소스 코드 디렉터리
3. res : 이미지, 레이아웃 MP3 등의 리소스 디렉터리
4. Gradle Scripts : 빌드 관련 설정 정보 디렉터리 (=Maven과 비슷한 역할을 수행)

<Project 뷰>
실제 디렉터리의 구조를 그대로 보여준다.

- Project 뷰의 구조
1. app : 앱과 관련된 모든 소스(코드, 라이브러리, 이미지 등) 디렉터리
2. src : 내가 만든 소스(코드, 레이아웃, 이미지 등)가 있는 디렉터리
3. java : 소스 코드가 있는 디렉터리(아직 java인 상태)
4. res : 이미지, 레이아웃, MP3 등의 리소스 디렉터리
5. AndroidManifest.xml : 설치 정보 파일
6. build.gradle : 빌드 정보 파일

<에뮬레이터 생성 및 실행>
1. 우측상단의 디바이스 매니저 클릭 후 실행
2. Create virtual divice 클릭
3. Select Hardware - Nexus 4 선택 후 Next
* 높은 사양일수록 더 많은 메모리가 소모된다.
4. API Level 확인 후 Release Name의 Download 클릭
5. Download된 버전 선택 후 Next 및 최종 설정 후 Finish 클릭

<리스너에 이벤트 부착방법>
1. build.gradle에 코드 추가
buildFeatures{
    viewBinding true
}
2. MainActivity.kt에서 setContentView(R.layout.activity_main)를 주석처리
3. 이벤트 작성

- 실행환경
- 데이터타입/변수
- 제어문 : 조건문(if), 반복문(for, while)
- 여러 개 데이터 저장 : 배열