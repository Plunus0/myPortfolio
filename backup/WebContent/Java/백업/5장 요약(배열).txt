배열
같은 타입의 여러 변수를 하나의 묶음으로 다루는 것
(타입)[ ] (변수명) = new (타입) [ (길이) ] ;
*배열의 길이는 추후 변경이 불가

배열의 인덱스
각 요소에 자동으로 붙는 번호
인덱스의 범위는 0부터 '배열길이-1까지'
*배열의 넘버는 0부터 시작 ( score[0])

배열의 선언과 생성
배열의 선언 - 배열을 다루기 위한 참조변수의 선언
타입[ ] 변수이름;
타입 변수이름[ ];
*둘 다 동일한 결과

배열의 길이
배열이름.length - 배열의 길이(int형 상수)

배열의 출력
(타입) [ ] (변수명) = { 값, 값, 값 ...}

for(int i=0; i< 변수명.length; i++){
system.out.println(변수명[i]); }
배열의 요소를 순서대로 하나씩 출력

system.out.println(Arrays.toString(변수명));
배열의 모든요소를 [ 값, 값, 값 ...]으로 출력

배열의 활용
배열의 모든 요소를 더해서 총합과 평균을 구한다.
-for문을 활용하여 각 요소순으로 변수에 저장
-변수를 배열의 길이만큼 나눠서 평균 확인

최대값과 최소값
첫번째 요소를 담은 변수를 두번째 이상의 요소와 비교하여 큰 값일 경우 변수에 다시 저장
첫번째 요소를 담은 변수를 두번째 이상의 요소와 비교하여 작은 값일 경우 변수에 다시 저장

배열의 요소의 순서를 반복해서 바꾼다 (숫자 섞기)
각 요소를 순서대로 끝까지 임의의 요소와 자리를 바꾼다. (임시변수 활용하여 값 3개를 교체)

String배열의 선언과 생성
(타입)[ ] (변수명) = new (타입) [ (길이) ] ;
*String은 참조형 타입이기 때문에 Null값으로 초기화된다.

커맨드 라인을 통해 입력받기
커맨드 라인에 입력한 값이 문장려 배열에 담겨서 전달된다.

2차원 배열
테이블 형태의 데이터를 저장하기 위한 배열

2차원 배열의 인데스
(타입)[ ][ ] (변수명) = new (타입) [ (행길이) ][ (열길이) ] ;

2차원 배열의 초기화
(타입)[ ] [ ] (변수명) = { { 값, 값, 값...}, {값, 값, 값...} };
*활용방법은 구구단과 비슷함

String클래스
String클래스는 char[ ](문자열 배열)와 메서드(기능)를 결합한 것
String클래스는 내용을 변경할 수 없다.(내용은 변경되지 않고, 다른 주소로 새로 생성되어 연결)

String클래스의 주요 메서드
[Char]  (변수명)charAt(int index) : 문자열에서 해당 위치(index)에 있는 문자를 반환한다.
[int]  (변수명).length() : 문자열의 길이를 반환한다.
[String]  (변수명).substring(int from, int to) : 문자열의 index범위 내(from~to)문자들을 반환
[boolean] equals(Object obt) : 문자열의 내용이 같은지 확인
Char[ ] toCharArray() : 문자열을 문자배열(char[ ])로 변환해서 반환한다.

Arrays클래스

배열의 비교와 출력 - equals(), toString()
Arrays.toSting () : 배열의 모든 요소 출력 (1차원배열)
Arrays.deeptoSting () : 배열의 모든 요소 출력 (다차원 배열)
Arrays.equals(배열1, 배열2) : 배열을 비교 (1차원 배열)
Arrays.deepEquals(배열1, 배열2) : 배열을 비교 (다차원 배열)
배열의 복사 - copyOf(), copyOfRange()
Arrays.copyOf(배열, 복사할 요소의 범위) : 배열을 필요한 범위만큼 복사(몇번째 까지)
Arrays.copyOfRange(배열, from, to) : 배열을 필요한 범위만큼 복사(from~to)
배열의 정렬 - sort()
Arrays.sort(배열); : 배열을 오름차순 정렬