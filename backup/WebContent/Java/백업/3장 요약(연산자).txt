연산자
연산을 수행하는 기호 (+,-,*,/)
*결과를 반환하지 않으면 연산자가 아님
피연산자
연산자의 연산 수행 대상

연산자의 종류(연산 우선순위대로)
증감, 단항연산자 : 피연산자가 하나, 부호연산자
(++ == + - ~ ! )
형변환 연산자 : 변수 또는 상수의 타입을 변경
((type))
산술연산자 : 사칙 연산과 나머지 연산(%)
(* / % + - << >>)
비교연산자 : 크고 작음과 같고 다름을 비교
(> < >= <= == !=)
기타 : instanceof
논리연산자 : '그리고(AND)'와 '또는(OR)'으로 조건을 연결
(& ^ | ~ && || ! )
삼항연산자 : 피 연산자가 셋일 때 사용
( ?: )
대입연산자 : 우변의 값을 좌변에 저장
(= += -= *= /= %= <<= >>= &= ^= |=)
*산술>비교>논리>대입
*단항>이항>삼항
*대입과 단항 연산자를 제외하면, 진행방향은 모두 왼쪽 -> 오른쪽

증감 연산자
++ 피연산자의 값을 1 증가시킨다.
-- 피연산자의 값을 1 감소시킨다.
*전위형(++i)과 후위형(i++)이 있음
*독립적으로 사용된 경우, 전위형과 후위형의 차이가 없다.
*증감연산자의 식이 이해가 안될땐 식을 분리해보기(전위형일땐 위로, 후위형일땐 아래로)

부호 연산자
'-'는 피연산자의 부호를 반대로 변경
'+'는 아무일도 하지 않는다. (실제 사용X)

수동 형변환
변수 또는 상수의 타입을 다른 타입으로 변환하는 것 
(타입)피연산자
정수>문자 : 유니코드에 해당하는 문자 출력
문자>정수 : 유니코드 번호에 해당하는 숫자 출력
실수>정수 : 소수점 아래는 버림(값 손실 발생)

자동 형변환
기존의 값을 최대한 보존할 수 있는 타입으로 자동 형변환
큰 값이 작은 타입에 들어갈 경우 자동 형변환
반대의 경우는 불가능
byte>char>short>int>long>float>double
*리터럴은 자동으로 값 확인 후 가능할 경우 자동형변환 가능

사칙 연산자
같은 타입끼리만 계산이 가능하며, 결과도 같은 타입으로 출력

산술변환
연산 전에 피연산자의 타입을 일치시키는 것
두 피연산자의 타입을 같게 일치시킨다.(보다 큰 타입으로 일치)
피연산자의 타입이 int보다 작은 타입이면 int로 변환된다.(byte, short, char)

반올림 Math.round()
실수를 소수점 첫 째자리에서 반올림한 정수를 반환(필요시 10의n자리를 곱하고 다시 double타입의 10의 n자리로 나눠서 값 도출)

나머지 연산자 %
오른쪽 피연산자로 나누고 남은 나머지를 반환
나누는 피연산자는 0이 아닌 정수만 허용(부호는 무시됨)
*i%2==0 : 2의 배수, i%3==0 : 3의 배수

비교 연산자
> : 좌변 값이 크면, true 아니면 flase
< : 좌변 값이 작으면, true 아니면 flase
>= : 좌변 값이 크거나 같으면, true 아니면 flase
<= : 좌변 값이 작거나 같으면, true 아니면 flase
== : 두 값이 같으면, true 아니면 flase
!= : 두 값이 다르면, true 아니면 flase

문자열 비교
문자열 비교시 == 대신 equals()를 사용

논리 연산자 && ||
조건식을 연결할 때 사용하는 연산자
|| (OR결합) : 피연산자 중 어느 한 쪽이 true이면 ture를 결과로 얻는다.
&& (AND결합) : 피연산자 양쪽 모두 true이어야 true를 결과로 얻는다.
*문자 ch는 숫자('0'~'9')이다.
사용자로부터 입력된 문자가 숫자('0'~'9')인지 확인하는 식은 다음과 같이 쓸 수 있다.
'0' <= ch && ch <= '9'
유니코드에서 문자 '0'부터 '9'까지 연속적으로 배치되어 있기 때문에 가능한 식이다.
문자 '0'~'9'
문자코드 48~57
*문자 ch는 소문자 또는 대문자이다.
('a' <= ch && ch <='z') || ('A' <= ch && ch <= 'Z')

논리 부정 연산자 ! (not의 의미)
true를 false로, false는 true로 바꾼다.

조건 연산자 ? :
조건식의 결과에 따라 연산결과를 달리한다.
조건식 ? 식1(true) : 식2(false)

대입 연산자
오른쪽 피연산자를 왼쪽 피연산자에 저장 후 저장된 값을 반환
lvalue : 대입 연산자의 왼쪽 피연산자(저장공간)
rvalue : 대입 연산자의 오른쪽 피연산자

복합 대입 연산자
대입연산자와 다른 연산자를 하나로 축약
i+=3;  ==  i=i+3;
i-=3;  ==  i=i-3;
i*=3;  ==  i=i*3;
i/=3;  ==  i=i/3;
i%=3;  ==  i=i%3;
i<<=3;  ==  i=i<<3;
i>>=3;  ==  i=i>>3;
i&=3;  ==  i=i&3;
i^=3;  ==  i=i^3;
i|=3;  ==  i=i|3;
i*=10+j;  ==  i=i*(10+j); // 괄호 조심