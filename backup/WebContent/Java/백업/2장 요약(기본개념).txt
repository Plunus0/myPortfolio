클래스
Scanner
화면으로부터 데이터를 입력받는 기능을 제공하는 클래스
Scanner 사용법
1. import문 추가
import java.util.*;
2. Scanner객체의 생성
Scanner scanner = new Scanner(System.in);
3. Scanner객체를 사용
int num = scanner.nextInt(); // 화면에서 입력받은 정수를 num에 저장
String input = scanner.nextLine();//화면에서 입력받은 내용을 input에 저장
int num = Integer.parseInt(input);//문자열(input)을 숫자(num)로 변환

메서드
scanner.nextLine() : 화면에서 한줄을 입력받음
scanner.nextInt() : 정수를 화면에서 입력받음
Integer.parseInt(내용) : 문자를 숫자로 변환
System.out.print(내용) : 내용 출력
System.out.println(내용) : 내용 출력 후 줄바꿈
System.out.printf(내용) : 내용 출력(형식 지정가능)
*지시자(JavaAPI > Formatter에서 추가 확인 가능)
<정수>
%b : boolean형식으로 출력
%d : 10진수(decimal)로 출력
%o : 8진수(octal)로 출력
%x : 16진수(hexa-decimal)로 출력
*지시자 앞에 #을 붙이면 접두사도 같이 출력
<실수>
%f : 부동 소수점(floating-point)으로 출력
*지시자 앞에 소수점 n자리 붙일 경우 해당 자리만큼 출력
%e : 지수(exponent)로 출력
%g : 부동 소수점 혹은 지수 중 간략한 방식으로 출력
<문자>
%c : 문자(character)로 출력
%s : 문자열(string)로 출력
"%s", Integer.toBinaryString(내용) : 2진수로 출력
<개행문자>
%n : 개행문자(줄바꿈)
*예시 : ("age:%d year:%d%n", 14, 2017);

변수란?
하나의 값을 저장할 수 있는 메모리 공간

변수의 선언 이유
값을 저장할 공간을 마련하기 위함

변수의 선언 방법
변수타입 변수이름 ;

변수에 값 저장 하기
대입연산자를 통해 저장 ("=")
*변수의 타입이 같다면 한줄에 여러 변수를 선언과 초기화할 수 있음

변수의 초기화
변수에 처음으로 값을 저장하는 것

변수의 값 읽기
변수의 값이 필요한 곳에 변수의 이름을 적는다.

변수의 타입
저장할 값의 타입에 의해 결정
저장할 값의 타입과 일치하는 타입으로 변수를 선언

기본형 타입과 크기(8개)
실제 값을 저장
문자 : char[2byte]
정수 : byte,[1byte] short[2byte], int[4byte], long[8byte]
실수 : float[4byte], double[8byte]
논리 : boolean(참,거짓)[1byte]
*char타입의 범위 : 0~65535
*byte타입의 범위 : -128~127
*short타입의 범위 : -32768~32767
*int타입의 범위 : -20억~20억
*Long타입의 범위 : -800경~800경
*Long타입의 범위 이상의 수 사용시 실수타입 혹은 Biginteger 클래스 사용
*float타입은 부호bit, 지수bit, 가수bit이 구분되어 있어서 4byte여도 큰 값을 저장가능(표현할 수 없는 범위가 있으며, 7자리 이상에 오차가 있음)
*double : float타입의 2배

*정수형과 실수형 타입엔 부호bit가 있음
*숫자 입력시 언더바('_') 사용 가능

기본형 타입의 종류
논리형 : true와 false 중 하나를 값으로 갖으며, 조건식과 논리적 계산에 사용된다.
문자형 : 문자를 저장하는데 사용되며, 변수 당 하나의 문자만을 저장할 수 있다.
정수형 : 정수 값을 저장하는데 사용된다. 주로 사용하는 것은 int와 long이며, byte는 이진 데이터를 다루는데 사용되며, short은 c언어와의 호환을 위해 추가되었다.(잘 안쓰임)
실수형 : 실수 값을 저장하는데 사용된다. float와 double이 있다.

기본형 타입의 표현범위
1byte = 8bit
n bit로 표현할 수 있는 값의 개수 : 2n개
n bit로 표현 할 수 있는 부호없는 정수의 범위 : 0~2(n-1)
n bit로 표현 할 수 있는 부호있는 정수의 범위 : -2(n-1)~2(m-1)-1

참조형 타입
기본형을 제외한 나머지
null or 메모리 주소를 저장(4, 8byte)

타입간의 변환방법
1. 문자와 숫자간의 변환
문자 '0'을 더해주면 문자 타입
문자 '0'을 빼주면 숫자 타입
2. 문자열로의 변환 (문자/숫자 공통)
빈 문자열 ""을 더해주면 문자열 타입
3. 문자열을 숫자로 변환
Integer.parse[Type]("stri ng") 입력
4. 문자열을 문자로 변환
"string".CharAt(0) 입력

상수란?
한 번만 값을 저장 가능한 변수
변수의 타입 앞에 'fInal' 붙이기

리터럴이란?
그 자체로 값을 의미하는 것
ex) 숫자, 또는 문자

리터럴의 접두사와 접미사(대소문자 구분 x)
논리형 : false, true / 없음
정수형 : 123, 100L / L (가급적 대문자)
실수형 : 3.14, 1.4f / f, d (d는 생략 가능)
문자형 : 'A', '1' / 없음
문자열 : "ABC", "123" / 없음
*2진수 8진수, 16진수 구분
2진수 : 접두사 0b
8진수 : 접두사 0
16진수 : 접두사 0x
*e = 10의n제곱(실수형)
*역슬래쉬(\) : 개행문자(줄바꿈)
*정수형과 실수형은 타입이 구분되어 있으므로 접미사를 붙여 구분(정수형 중 d는 생략가능)
*값 출력시 접두사, 접미사는 출력x

변수와 리터럴의 타입 불일치
범위가 '변수 > 리터럴' 인 경우 가능
범위가 '변수 < 리터럴' 인 경우 불가능(실수형>Long)

문자와 문자열
char : 문자
String : 문자열
*String은 기본 타입이 아닌 참조형 타입(클래스)이나 예외로 인스턴스 생성 없이 사용 가능

오버플로우
표현 가능한 범위를 넘는 것
최대값+1 = 최소값
최소값-1 = 최대값