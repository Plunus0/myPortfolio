<package : 패키지>
서로 관련된 클래스의 묶음
클래스 관리의 편의성 및 재사용성이 높아진다.
클래스의 실제 이름은 패키지를 포함한다. ( java.lang.String)
* 클래스는 클래스파일(*.class), 패키지는 폴더, 하위 패키지는 하위 폴더
* rt.jar는 클래스들을 압축한 파일 (JDK설치경로\jre\lib에 위치)

- 패키지의 선언
패키지는 소스파일의 첫 번째 문장으로 단 한번 선언
같은 소스 파일의 클래스들은 모두 같은 패키지에 속하게 된다.
패키지 선언이 없으면 이름없는(unnamed) 패키지에 속하게 된다.

- classpath : 클래스패스
클래스 파일(*.class)의 위치를 알려주는 경로(path)
환경변수 classpath로 관리하며, 경로간의 구분자는 ; 를 사용
classpath(환경변수)에 패키지의 루트를 등록해줘야 함

<import문>
클래스를 사용할 때 패키지이름을 생략할 수 있다.
컴파일러에게 클래스가 속한 패키지를 알려준다.
패키지문과 클래스선언 사이에 위치

- 사용방법
1. 최상단에 " import 사용할패키지명.*; " 라고 적는다
2. 단축키 : Ctrl+Shift+O
* Java.lang패키지의 클래스는 import하지 않고도 사용 가능
* import문은 컴파일 시에 처리되므로 프로그램의 성능에 영향없음
* import java.*;는 java패키지의 모든 클래스(패키지는 포함안됨)
* 이름이 같은 클래스가 속한 두 패키지를 import 할 때는 클래스 앞에 패키지명을 붙여서 구분

- static import문
static멤버를 사용할 때 클래스 이름을 생략할 수 있게 해준다.
import static java.lang.Interger.*; : Integer클래스의 모든 static메서드
import static java.lang.Math.random.*; : Math.random()만. 괄호 안붙임
import static java.lang.System.out.*; :  System.out을 out으로만 참조가능

- 주요 패키지
> java.lang: 자바프로그램에 필요한 기본적인 클래스와 인터페이스를 제공(import안해도 사용가능)
> java.util: 다양한 유틸리티
> java.io: 입출력 관련
> java.awt, javax.swing (import javax.swing.*) : 그래픽 관련