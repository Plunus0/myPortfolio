<상속관계>
class 자식클래스 extends 부모클래스 { }
기존의 클래스로 새로운 클래스를 작성(코드의 재사용)
두 클래스를 부모와 자식으로 관계를 맺어주는 것
자손은 조상의 모든 멤버를 상속(생성자, 초기화블럭 제외)
자손의 변경은 조상에 영향을 미치지 않는다.

<포함관계>
*클래스의 멤버로 다른 클래스 타입의 변수를 선언 및 객체생성하는 것

* 클래스간의 관계 결정
상속관계 : ~은 ~이다. (is-a)
포함관계 : ~은 ~을 가지고 있다. (has-a)
*대부분은 포함이다.

<단일상속>
Java는 단일상속만을 허용(C++는 다중상속 허용)
비중이 높은 클래스 하나만 상속, 나머지는 포함으로 작업

- 모든 클래스의 조상 : Object클래스
부모가 없는 클래스는 자동적으로 Object클래스를 상속받게 된다.
toString(), equals(Object obj), hashCode() ... 등 11개의 메서드 상속
상속계층도의 항상 맨 위는 Object클래스

<오버라이딩>
상속받은 메서드를 자신에 맞게 변경하는 것
선언부는 변경불가, 구현부만 변경 가능

- 오버라이딩의 조건
선언부가 조상 클래스의 메서드와 일치
접근 제어자를 조상 클래스의 메서드보다 좁은 범위로 변경할 수 없다.
예외는 조상 클래스의 메서드보다 많이 선언할 수 없다.

- 참조변수 super
객체 자신을 가리키는 참조변수. 인스턴스 메서드(생성자)내에만 존재
조상의 멤버를 자신의 멤버와 구별할 때 사용
조상 = super
자손 = this

- 조상의 생성자 super
조상의 생성자를 호출할 때 사용
조상의 멤버는 조상의 생성자를 호출해서 초기화
*코드의 중복 제거
[ 중요 ] 생성자의 첫 줄에 반드시 생성자를 호출해야 한다. [ 중요 ]
그렇지 않으면 컴파일러가 생성자의 첫 줄에 super( );를 삽입
