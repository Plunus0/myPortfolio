[GUI응용 프로그램]
이미지 혹은 그래픽을 이용하여 화면을 구성하고, 마우스 등의 편리한 도구를 이용하여
사용자가 입력을 편리하게 해주는 사용자 인터페이스

- GUI의 종류
1. 컴포넌트 기반 : 기본적인 구조들이 갖춰져 있다.
2. 그래픽 기반 : 자유도가 높고, 속도가 빠르다. (컴포넌트 기반 대비)

<GUI관련 패키지>
- AWT : 자바가 처음 나왔을 때 함께 배포된 패키지
- Swing : AWT기술을 기반으로 작성된 라이브러리
(모두 대문자 J로 시작한다.)

<스윙 패키지 사용 import문>
import java.awt.* : 그래픽 처리 클래스의 경로명
import java.awt.event.* : AWT 이벤트 사용을 위한 경로명
import javax.swing.* : 스윙 컴포넌트 클래스들의 경로명
import javax.swing.event.* : 스윙 이벤트를 위한 경로명

<컨테이너>
다른 GUI 컴포넌트를 포함할 수 있는 컴포넌트
java.awt.Container 상속, 다른 컨테이너에 포함될 수 있다.
최상위 컨테이너(스윙 프레임)는 독립적인 출력이 가능하다.

- 스윙 프레임
모든 스윙 컴포넌트를 담는 최상위 GUI컨테이너
JFrame을 상속받아 구현한다.
* 프레임 : 스윙 프로그램의 기본 툴
* 메뉴바 - 메뉴 부착
* Content Pane : GUI 컴포넌트 부착

<컴포넌트>
컨테이너에 포함되어야 화면에 출력될 수 있는 순수 컴포넌트

<컨테이너의 종류>
- JFrame : Default 배치관리자(Layout)는 BorderLayout
- JPanel : Default 배치관리자(Layout)는 FlowLayout

<Layout과 종류>
java.awt 패키지에 구현되어 있다.
setLayout( )을 통해 배치관리자를 설정

1. FlowLayout
배치 순서에 따라 왼쪽에서 오른쪽으로 배치
컨테이너의 크기가 변하면 재배치된다.
- FlowLayout의 생성자
> FlowLayout( ) // 기본생성자
> FlowLayout(int align)
> FlowLayout(int align, int hGap , int vGap)

- FlowLayout의 속성
> FlowLayout.LEFT
> FlowLayout.RIGHT
> FlowLayout.CENTER // default 

2. BoarderLayout
NORTH, EAST, WEST, SOUTH, CENTER 5구역으로 구성 및 배치된다.
컨테이너의 크기가 변하면 재배치된다.
add( )를 사용하여 부착할 컴포넌트의 위치를 지정해줘야한다.
*contentPane.add(new Button( ),BorderLayout.WEST);
- BoarderLayout의 생성자
> BorderLayout( ) // 기본생성자
> BorderLayout(int hGap, int vGap)

- BoarderLayout의 속성
> BorderLayout.EAST
> BorderLayout.WEST
> BorderLayout.NORTH
> BorderLayout.SOUTH
> BorderLayout.CENTER

3. GridLayout
표 모양 2차원의 평면구조로 왼쪽에서 오른쪽으로 배치된다.
생성자에 행수와 열수 지정
배치관리자가 없는 레이아웃(null)
컨테이너의 크기가 변하면 재배치된다.
- GridLayout의 생성자
> GridLayout() // 기본생성자
> GridLayout(int row, int cols, int hGap, int vGap) //행(row)의 수, 열(cols)의 수
> Gridlayout(int row, int cols)


4. CardLayout : 카드를 쌓듯이 겹쳐놓는다.

5. null : 배치관리자가 없는 컨테이너
임의 크기나 위치에 지정시킬 수 있다.
위치와 크기가 수시로 변하여야 하거나 겹치는 효과를 내고 싶을때
배치관리자를 제거하고, 위치와 크기를 반드시 지정해주어야한다.
- 배치관리자 제거
> setLayout(null)
- 크기 설정
> setSize(width, height)
- 위치 설정
> setLocating(x, y)
- 크기, 위치 일괄 설정
> setBounds(x, y, width, height)

- 기본적인 세팅 예시
1. class에 컨테이너를 상속
public class GUI extends JFrame
2. 생성자 생성 (생성자 내부에서 메서드를 사용 시 멤버접근연산자( . ) 가 필요없다.
public GUI( ) {
3. 타이틀 설정
setTitle("타이틀명");
4. 창 닫기시 종료 설정
setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
5. 컨테이너 설정(컨텐츠팬 찾기)
Container contentPane = getContentPane( );
6. 레이아웃 설정
contentPane.setLayout(new FlowLayout(FlowLayout.LEFT)); : FlowLayout생성
7. 컴포넌트 생성
JButton btn = new JButton( );
8. 컴포넌트 부착
contentPane.add(btn);
9. 창의 크기 설정
setSize(300, 300);
10. 창의 위치 설정
setLocation(100, 100);
11. 노출 여부 설정
setVisible(true);
12. 프로그램 종료
System.exit(0);
12. 실행
new GUI( );
* 여러개의 클래스로 만들어서 컴포넌트(판넬) 생성시 해당 클래스를 생성 후 한 화면에 붙일 수 있다.)