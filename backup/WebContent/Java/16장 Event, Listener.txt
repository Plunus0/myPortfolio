[Event-Listener]

<Event>
키 입력, 마우스 클릭, 드래그, 외부장치 입력, 네트워크, 스레드 메시지 수신 등 발생하는 모든 특수한 상황을 말한다.

- Event의 실행 과정
하드웨어 >> 운영체제 >> JVM에게 전달 >> 이벤트분배스레드에게 정보 전달 >
> 해당 리스너 찾아서 실행
* 무한루프 코드로 실행 후 다시 대기상태로 변하기 때문에 코드를 간결하게 처리

- Event 객체정보
이벤트 소스, 이벤트 종류, 화면 좌표, 마우스 버튼 번호, 마우스 클릭 횟수, 키의 코드/문자, 체크/라디오 박스의 체크 상태 등

- Event의 상속관계
1. EventObject : 이벤트의 최고조상, 발생이벤트의 정보를 가지고있는 getSource( )  메서드를 가지고 있다.

2. AWTEvent : 이벤트 오브젝트의 다음 자손

3. ActionEvent : 액션이 발생했을 때 발생
3. ItemEvent : getItem( ), getStateChange( ) 메서드를 가지고 있다.
3. ComponentEvent : 입력장치로부터 발생하는 이벤트를 담당

4. InputEvent : ComponentEvent의 자손 MouseEvent와, KeyEnvet의 조상이다.

5. MouseEvent : 마우스의 입력으로 발생되는 이벤트를 담당
> getButton( ) : 마우스 버튼을 클릭했을 때
> getClickCount( ) : 마우스의 클릭 횟수를 반환
> getPoint( ) : 마우스의 위치를 반환
> getX( ) : 마우스의 X좌표를 반환
> getY( ) : 마우스의 Y좌표를 반환

5. KeyEnvet : 키보드의 입력으로 발생되는 이벤트를 담당
> getKeyCode( ) : 키보드의 발생한 코드값을 가져온다.
> getKeyChar( ) : 키보드의 발생한 문자값을 가져온다.
> getKeyText( ) : 키보드의 발생한 이름값을 가져온다.

<EventListener>
특정 이벤트가 발생했을 경우 실행할 명령어를 작성한다.
발생한 이벤트는 e.getSource( )에 저장되어 있다.
* e.getSource( )를 형변환하여 컴포넌트에 저장 후 사용할 수 있다.

- EventListener 작성방법
1. 이벤트종류 선택
2. 리스너 작성
3. 리스너 등록 : 부착할대상컴포넌트.add*Listener(listener)
* 부착할 리스너(listener)는 익명클래스 혹은 인터페이스를 상속받은 클래스를 사용
* 인터페이스로 작성하거나 상속받을 경우 미완성된 메서드들을 자동으로 구현시킬 수 있다. 발생 이벤트에 맞게 구현시킬 내용을 작성
* 인터페이스가 아닌 완성클래스도 있으나 오버라이딩을 직접 작성해야하므로 비추천 (ex. MouseAdapter ...)

- EventListener 선택 참조 (종류)
이벤트객체 / 리너스이벤트
이벤트소스 : 이벤트가 발생하는 상황

ActionEvent / ActionListener
JButton : 버튼을 선택할 때
JTextField : 입력 중 엔터키 입력 시
JMenuItem : 메뉴 선택시

ItemEvent / ItemListener
JCheckBox : 체크박스 선택/해제
JCheckBoxMenuItem : 체크박스 선택/해제
JRadioButton : 라디오버튼 선택상태 변경 시

KeyEvent / KeyListener
Component : 키보드가 눌러지거나 땔 때
MouseEvent / MouseListener or MouseDrageListener
Component : 마우스관련
FocusEvent / FocusListener
Component : 포커스를 받거나 잃을 때

<KeyEvent / KeyListener>
사용자가 키를 입력할 때 발생하는 이벤트
키를 입력하더라도 포커스를 가지지 못한다면 KeyEvent를 받을 수 없다.
반드시 KeyEvent에서는 포커스를 처리해 줘야한다.
* 리스너가부착된컴포넌트.setFocusable(true) // 포커스를 준다
* 리스너가부착된컴포넌트.requestFocus(); // 포커스를 받은 상태
* 포커스 부여 시 포커스가 뺏길 수 있으므로 반드시 setVisible( ) -> setFocusable( ) -> requestFocus( ) 순으로 부여

- EventListener 부착방법
부착할컴포넌트.addKeyListener(new KeyListener( ) { }) : 익명클래스로 부착
부착할컴포넌트.addKeyListener(KeyListener를 상속받은 클래스명) : KeyListener를 상속받은 클래스를 작성하여 부착
* implements KeyListener를 상속받은 클래스를 입력

- 키 동작
> 문자 : KeyPressed( ) -> KeyTyped( ) -> KeyRelesed( )
> 문자 제외 : KeyPressed( ) -> KeyTyped( )

-  키보드 이벤트 관련 메서드
> 코드값 : getKeyCode( ) : 코드값 이벤트가 발생한 키보드입력의 keyCode값을 반환
> 문자값 : getKeyChar( ) : 문자값 이벤트가 발생한 키보드입력의 keyCode값을 반환
> 이름값 : getKeyText( ) : 이름값 이벤트가 발생한 키보드입력의 keyCode값을 반환

- keyCode 종류 : KeyEvent속에 가상키의 상수값 (사용시 KeyEvent.* 로 사용한다.)
> VK_0 ~~ VK_9
> VK_A ~~ VK_Z
> VK_F1 ~~ VK_F24
> VK_HOME, VK_END, VK_PGUP
> VK_LEFT, VK_RIGHT, VK_UP, VK_DOWN, VK_SHIFT, VK_TAB, VK_ALT

<MouseEvent / MouseListener or MouseDrageListener>
사용자가 마우스를 조작할 때 발생하는 이벤트

- MouseEvent의 종류
> MouseListener : 
> MouseMotionListener : 
> MouseWheelListene : 

-  마우스 이벤트 관련 메서드
> mouseClicked( ) : 마우스 클릭
> mousePressed( ) : 마우스를 누를 때
> mouseReleased( ) : 마우스를 뗄 때
> mouseEntered( ) : 마우스가 올라갈 때
> mouseExited( ) : 마우스가 빠져나갔을 때
> mouseDreagged( ) : 마우스 드래그
> mouseDragged( ) : 마우스 버튼을 누른 상태에서 이동(드래그)
> mouseMoved( ) : 마우스를 움직였을 때
> getWheelRotation( ) : 마우스 휠 값

> int getX( ) : X좌표값을 반환
> int getY( ) : Y좌표값을 반환
> Point getPoint( ) : 좌표값을 Point객체로 반환
> int getClickCount( ) : 클릭 횟수를 반환
> int getButton( ) : 클릭한 버튼을 반환