[PHP]
- PHP는 동적인 언어, 문장이 끝에 반드시 ; 로 끝맺음
- 웹서버는 PHP 파일을 받으면 PHP프로그램이 이관받아 PHP 문법에 따라 해석한 뒤 그 결과를 HTML로 만들어서 반환

- 사용방법
<?php
   (PHP문법)
?>
<?= (PHP문법) ?>

[데이터 타입]
integer : 정수
float : 실수
string : 문자열
boolean : 참, 거짓
array : 배열
object : 오브젝트
null : null

[연산자]
사칙연산자 : +, -, *, /
비교연산자 : ==, <, >, <=, >=, !=

[Variable : 변수]
- 사용방법
$x = y : x에 y를 대입한다.
(추후 사용시에도 반드시 $x 라고 표현해야한다.)

[function : 함수]
function 함수명($매개변수){
   (실행부) };
* return으로 결과값을 반환받을 수 있다.

사용방법
함수명(입력값);

[제어문 : 조건문]
- 사용방법
if (boolean) {
   (실행문)
} elseif (boolean){
   (실행문)
} else {
   (실행문)
}

[제어문 : 반복문]
- 사용방법
while (boolean) {
   (실행문)
}

[String : 문자열]
' ', " " 로 표현
(따옴표 내부에서는 html언어를 사용할 수 있다)
(시작과 끝은 같은 부호로 처리, 따옴표가 이중으로 표현될 필요가 있다면 큰 따옴표 안에 작은 따옴표를 넣는다.)
(문자열의 결합은 . 를 사용)

[String 주요 메서드]
strlen( x ) : 문자열의 길이를 반환
nl2br( x ) : 문자열 내 <br>태그를 사용하지 않아도 Enter 입력을 자동적으로 <br>태그로 변환되어 반환된다.

[Array : 배열]
배열은 연관배열과 일반배열 두 종류가 있다.

일반 배열의 생성
$변수명 = array('value1', 'value2', . . .);
일반 배열의 사용
$변수명[ i ]

연관 배열의 생성
$변수명 = array( 'str1' => '값', 'str2' =>'값2');
* 연관배열은 배열의 값을 $변수명[ i ] 가 아닌 $변수명[ 'str1' ]로 저장한 값
연관 배열의 사용
$변수명['str1']

[Array의 주요 메서드]
count($변수명) : 배열의 길이를 정수로 반환
array_push($변수명,'value') : 배열의 마지막에 value를 추가

[주요 메서드]
- echo x ; / print( x ) ; : x를 출력한다.
- print_r( x ) : x의 값과 데이터 타입을 출력
- var_dump( x ) : x의 값과 데이터 타입을 출력
- date('Y-m-d H : i : s') : 현재 연 월 일 시 분 초를 반환
- $_GET[ x ] : URL Parameter로 받은 값을 코드내에서 반환 (URL에서 y를 입력받았으니 출력은 y가 된다.)
> URL Parameter 사용법
URL(주소입력창) 맨 뒤에 ? 를 사용하여 PHP Parameter를 활성화 한다. 이후 변수처럼 사용
* ? x = y
* 추가 입력은 '&' 구분자를 활용
- isset( x ) : x의 값이 설정되어있으면 true, 그렇지 않다면 false
- unset ( x ) : x의 값을 지운다.
- file_get_contents("파일경로") : 해당 경로의 데이터를 가져온다.
- file_put_contents('파일주소',함수) : 결과값을 해당 파일에 저장(해당 파일이 없다면 파일을 생성한다.
- rename('이전파일주소', '변경할파일주소') : 해당 주소의 파일 이름을 변경한다.
- unlink('파일경로') : 해당 주소의 파일을 삭제
- &_POST[ 'name' ] : POST방식으로 전달받은 name값을 배열로 반환한다.
- header('Location : 이동할 주소') : 사용자를 해당 주소로 이동시킨다.
- htmlspecialchars("str") : 해당 str에서의 특수기호들이 str화되고 실행되지 않는다. (보안상 중요)
- basename('파일경로') : 해당 경로에서 파일명만 추출한다.(경로는 삭제됨)
- scandir("파일 주소") : 디렉토리 안의 파일명을 배열로 반환(배열의 첫번째와 두번째는 자기자신과 부모의 디렉토리를 반환한다.)
* 디렉토리의 구분 
. / : 현재 디렉토리 (생략가능)
. . / : 부모 디렉토리
- exit : 아래의 php코드는 실행되지 않는다.
- die( ) : 인자를 출력 후 프로그램이 죽는다.


[Tip]
- '<?php echo ?>' == '<?= ?>' : 에코를 써야하는 경우 위와 같이 쓸 수 있다.
- 파일을 삭제할 때는 Link방식이 아닌 POST방식으로 해야한다.
- lib : 재사용할 가능성이 높은 코드들을 lib폴더에 정리한다.
- php에서는 한번 정의된 함수는 재정의되지 않는다.
- 사용자의 입력값은 항상 불신해야한다. htmlspecialchars( ) 코드 등으로 예방해야 한다.
- 파일시스템을 사용시 basename( )등의 설정을 통해 어느정도 다른 디렉토리에의 접근을 방지할 수 있다.

[PHP API의 종류와 기능]
Audio Formats Manipulation : 오디오 관련
Compression : 압축파일 관련
Cryptography Extensions : 암호/보안 관련
Database Extenstions : 데이터베이스 관련
File System Related Extensions : 파일 제어 관련
Human Language and Character Encoding Support : 문자 관련
Image Processing and Generation : 이미지 관련
Mail Related Extensions : 메일 관련
Mathemmatical Extensions : 수학 관련

[COMPOSER : 패키지 매니저]
Packagist : 다른 개발자들이 만들어놓은 함수나 패키지들을 이용할 수 있는 사이트

[타사 인증]
사이트 자체에서 사용자를 인증하는게 아닌 기존 대기업들의 인증시스템을 빌려 사용할 수 있다.(카카오톡으로 로그인하기 등)
* 다만 해당 방식에 종속될 수 밖에 없다.

federation authentication : 검색창에 시스템이름+login+사용할언어 라고 검색하면 방식이 나와있다.

[특수 기호]
\ : escape 문자(뒤의 기호를 기능이 아닌 문자열로 처리한다.)
/* */ : 주석